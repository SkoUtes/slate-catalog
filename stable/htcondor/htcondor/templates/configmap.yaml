apiVersion: v1
kind: ConfigMap
metadata:
  name: htcondor-{{ .Values.Instance }}-configuration
  labels:
    app: {{ template "htcondor.name" . }}
    chart: {{ template "htcondor.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance }}
data:
  condor_config.local: |-
{{ .Values.CondorConfigFile | indent 4 }}
{{ end }}
{{ if .Values.HTTPLogger.Enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: htcondor-{{ .Values.Instance }}-logger-startup
  labels:
    app: htcondor
    chart: {{ template "htcondor.chart" . }}
    instance: {{ .Values.Instance }}
    release: {{ .Release.Name }}
data:
  start-nginx.sh: |+
    #!/bin/bash -e

    # not ideal
    apt-get update
    apt-get install openssl -y

    if [ -z $HTPASSWD ]; then
      PASS=$(tr -dc 'a-f0-9' < /dev/urandom | head -c16)
      echo "Your randomly generated logger credentials are"
      echo "**********************************************"
      echo "logger:$PASS"
      echo "**********************************************"
      HTPASSWD="$(openssl passwd -apr1 $(echo -n $PASS))"
    fi

    mkdir -p /etc/nginx/auth
    echo "logger:$HTPASSWD" > /etc/nginx/auth/htpasswd

    echo 'server {
      listen       8080;
      server_name  localhost;
      location / {
        default_type text/plain;
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/auth/htpasswd;  
        root   /usr/share/nginx/html;
        autoindex  on;
      }
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }' > /etc/nginx/conf.d/default.conf
    exec nginx -g 'daemon off;'

{{ end }}
