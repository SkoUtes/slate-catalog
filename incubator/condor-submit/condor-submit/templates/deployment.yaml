{{ if and .Values.SystemConfig.HostPath .Values.SystemConfig.PVCName }}
  {{ required "SystemConfig.HostPath and SystemConfig.PVCName should not both be set" .Values.Error_DoNotSet }}
{{ end }}
{{ if or .Values.SystemConfig.HostPath .Values.SystemConfig.PVCName }}
  {{ if not .Values.SystemConfig.MountLocation }}
    {{ required "SystemConfig.MountLocation must be set if SystemConfig.HostPath or SystemConfig.PVCName is set" .Values.Error_DoNotSet }}
  {{ end }}
{{ end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "condor-submit.fullname" . }}
  labels:
    app: {{ template "condor-submit.fullname" . }}
    chart: {{ template "condor-submit.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "condor-submit.fullname" . }}
      chart: {{ template "condor-submit.chart" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance | quote }}
  template:
    metadata:
      labels: 
        app: {{ template "condor-submit.fullname" . }}
        chart: {{ template "condor-submit.chart" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance | quote }}
    spec:
      volumes:
      {{ if eq .Values.UserConfig.Mode "sssd" }}
      - name: {{ template "condor-submit.name" . }}-auth-configuration
        configMap:
          name: {{ template "condor-submit.name" . }}-auth-configuration
          items:
          - key: sssd.conf
            path: sssd.conf
            mode: 256
      {{ end }}
      - name: condor-token-volume
        secret:
          secretName: {{ .Values.CondorConfig.AuthTokenSecret }}
          items: 
          - key: condor_token
            path: condor_token
            mode: 256
      - name: {{ template "condor-submit.name" . }}-condor-configuration
        configMap:
          name: {{ template "condor-submit.name" . }}-condor-configuration
      {{ if eq .Values.UserConfig.Mode "connectapi" }}
      - name: {{ template "condor-submit.name" . }}-provisioner-configuration
        configMap:
          name: {{ template "condor-submit.name" . }}-provisioner-configuration
      {{ end }}
      {{ if .Values.SystemConfig.HostPath }}
      - name: dfs-volume
        hostPath:
        # directory location on host
          path: {{ .Values.SystemConfig.HostPath }}
      {{ end }}
      {{ if .Values.SystemConfig.PVCName }}
      - name: pvc-volume
        persistentVolumeClaim:
        # use the requested PVC:
          claimName: {{ .Values.SystemConfig.PVCName }}
      {{ end }}
      containers:
      - name: condor-submit
        image: slateci/condor-submit:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        {{ if eq .Values.UserConfig.Mode "sssd" }} 
        - name: {{ template "condor-submit.name" . }}-auth-configuration
          mountPath: /etc/sssd/sssd.conf
          subPath: sssd.conf 
        {{ end }}
        - name: condor-token-volume
          mountPath: /root/tokens/condor_token
          subPath: condor_token
        - name: {{ template "condor-submit.name" . }}-condor-configuration
          mountPath: /etc/condor/condor_config.local
          subPath: condor_config.local
        {{ if eq .Values.UserConfig.Mode "connectapi" }}
        - name: {{ template "condor-submit.name" . }}-provisioner-configuration
          mountPath: /usr/local/etc/ciconnect/_config
          subPath: _config
        {{ end }}
        {{ if and .Values.SystemConfig.MountLocation .Values.SystemConfig.HostPath }}
        - name: dfs-volume
          mountPath: {{ .Values.SystemConfig.MountLocation }}
        {{ end }}
        {{ if and .Values.SystemConfig.MountLocation .Values.SystemConfig.PVCName }}
        - name: pvc-volume
          mountPath: {{ .Values.SystemConfig.MountLocation }}
        {{ end }}
        env:
        - name: _CONDOR_COLLECTOR_HOST
          value: {{ .Values.CondorConfig.CollectorHost | quote }}
        - name: _CONDOR_COLLECTOR_PORT
          value: {{ .Values.CondorConfig.CollectorPort | quote }}
        {{ if eq .Values.UserConfig.Mode "connectapi" }}
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.UserConfig.ConnectToken }}
              key: API_TOKEN
        - name: GROUP_GROUP
          value: {{ .Values.UserConfig.ConnectGroupSourceGroup }}
        - name: USER_GROUP
          value: {{ .Values.UserConfig.ConnectUserSourceGroup }}
        {{ end }}
        resources:
          requests:
            # we'll make it a modest request for now
            memory: {{ .Values.SystemConfig.Memory }}
            cpu:    {{ .Values.SystemConfig.Cpu }}
      {{ if .Values.SystemConfig.NodeSelector }}
      nodeSelector:
        {{ .Values.SystemConfig.NodeSelector }}
      {{ end }}