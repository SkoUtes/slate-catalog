apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cms-xcache.fullname" . }}
  labels:
    app: {{ template "cms-xcache.name" . }}
    chart: {{ template "cms-xcache.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cms-xcache.name" . }}
      chart: {{ template "cms-xcache.chart" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance | quote }}
    
  template:
    metadata:
      labels:
        app: {{ template "cms-xcache.name" . }}
        chart: {{ template "cms-xcache.chart" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance | quote }}
    spec:

      nodeSelector:
        xcache-capable: "true"
      
      tolerations:
      - key: "special"
        operator: "Exists"
        effect: PreferNoSchedule

      volumes:
      - name: xrootd-config
        configMap:
          name: {{ template "cms-xcache.fullname" . }}-config
      - name: x509-data
        emptyDir:
          medium: Memory
          sizeLimit: "10Mi"
      - name: x509-certs-volume
        secret:
          secretName: {{ .Values.XCacheConfig.CertSecret }}
          items:
          - key: userkey
            path: userkey.pem
            mode: 256 
          - key: usercert
            path: usercert.pem
      {{- range $nindex, $dir := .Values.XCacheConfig.CacheDirectories }}
      - name: {{ .type}}_{{ $nindex }}
        hostPath:
          path: {{ .path }}
          type: Directory
      {{- end }}
      - name: localroot
        hostPath:
          path: {{ .Values.LocalRoot }}
          type: Directory
      containers:
        - name: cms-xcache
          image: "opensciencegrid/cms-xcache:fresh"
          imagePullPolicy: Always
          env:
          - name: XC_ROOTDIR
            value: "{{ .Values.XCacheConfig.RootDir }}"
          - name: XC_RESOURCENAME
            value: "{{ .Values.XCacheConfig.ResourceName }}"
          - name: XC_SPACE_HIGH_WM
            value: "{{ .Values.XCacheConfig.HighWaterMark }}"
          - name: XC_SPACE_LOW_WM
            value: "{{ .Values.XCacheConfig.LowWaterMark }}"
          - name: XC_PORT
            value: "{{ .Values.Service.Port }}"
          - name: XC_RAMSIZE
            value: "{{ .Values.XCacheConfig.RamSize }}"
          - name: XC_BLOCKSIZE
            value: "{{ .Values.XCacheConfig.BlockSize }}"
          - name: XC_PREFETCH
            value: "{{ .Values.XCacheConfig.Prefetch }}"
          - name: XC_ROOTDIR
            value: "{{ .Values.XCacheConfig.LocalRoot }}"
          - name: WQ_BLOCKS_PER_LOOP
            value: "{{ .Values.XCacheConfig.WQBlocksPerLoop }}"
          - name: WQ_THREADS
            value: "{{ .Values.XCacheConfig.WQThreads }}"
          - name: DISABLE_OSG_MONITORING
            value: "{{ .Values.XCacheConfig.DisableOSGMonitoring }}"
          resources:
            requests:
              ephemeral-storage: "5Gi"
            limits:
              ephemeral-storage: "10Gi"
          livenessProbe:
            tcpSocket:
              port: {{ .Values.Service.Port }}
            initialDelaySeconds: 180
            periodSeconds: 60
          ports:
            - containerPort: {{ .Values.Service.Port }}         
          volumeMounts:
          - name: xrootd-config
            mountPath: /etc/xrootd/config.d/xrootd-config.cfg
          - name: x509-data
            mountPath: "/etc/proxy/"
            readOnly: true
          - name: x509-certs-volume
            mountPath: "/etc/grid-certs/"
            readOnly: true
          - name: localroot
            mountPath: {{ .Values.LocalRoot }}
          {{- range $nindex, $dir := .Values.XCacheConfig.CacheDirectories }}
          - name: {{ .type }}_{{ $nindex }}
            {{- if eq .type "data" }}
            mountPath: /xcache/data_{{ $nindex }}
            {{- else if eq .type "meta" }}
            mountPath: /xcache/meta_{{ $nindex }}
            {{- end }}
          {{- end }}
